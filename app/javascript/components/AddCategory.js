import React from "react";
import { navigate, Link } from "@reach/router";
import { Formik, Field, Form } from "formik";


// The AddCategory component has a form for typing a new category name.
// After submitting, the application will redirect to the CategoryList
// component. New categories must have at least 3 characters and the validation
// is added in the category model.

function AddCategory() {
  // handleSubmit function is to add a new category to the already existing
  // categories. If successful, it will redirect to index page.
  const handleSubmit = values => {
    const requestCategories = async () => {
      // We get the CSRF token generated by Rails to send it
      // as a header in the request to create a new post.
      // This is needed because with this token, Rails is going to
      // recognize the request as a valid request
      const csrfToken = document.querySelector("meta[name=csrf-token]").content;
      const response = await fetch("/api/categories", {
        method: "POST",
        credentials: "include",
        headers: {
          "Content-Type": "application/vnd.api+json",
          "X-CSRF-Token": csrfToken
        },
        body: JSON.stringify({ data : values })
      });
      if (response.status === 201) {
        navigate("/");
      }
    };
    requestCategories();
  };

  const special_button_style = {
    padding: '2px',
    margin: '4px'
  };

// Validation for the category have been declared in the category model
  return (
    <div>
      <h2>Add your category</h2>
      <li>Must be at least 3 characters</li>
      <Formik
        initialValues={{
          type: "categories",
          attributes: {
            category: ""
          }
        }}
        onSubmit={handleSubmit}>
        {() => (
          <Form>
            <Field type="text" name="attributes.category" />
            <button type="submit" style={special_button_style}>Create</button>
          </Form>
        )}
      </Formik>

      <Link to="/">Back</Link>
    </div>
  );
}

export default AddCategory;
