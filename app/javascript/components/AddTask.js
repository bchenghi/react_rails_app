import React,{ useEffect, useState } from "react";
import { navigate, Link } from "@reach/router";
import { Formik, Field, Form } from "formik";
import GetCategory from './GetCategory';

function AddTask(props) {

  let category = GetCategory(props.categoriesId);

// handleSubmit function will post a new task to the category
  const handleSubmit = values => {
    const requestTasks = async () => {
      // We get the CSRF token generated by Rails to send it
      // as a header in the request to create a new post.
      // This is needed because with this token, Rails is going to
      // recognize the request as a valid request
      const csrfToken = document.querySelector("meta[name=csrf-token]").content;
      const response = await fetch("/api/tasks", {
        method: "POST",
        credentials: "include",
        headers: {
          "Content-Type": "application/vnd.api+json",
          "X-CSRF-Token": csrfToken
        },
        body: JSON.stringify({ 'data': {'type': 'tasks', 'relationships':{'category':{
          'data':{'type':'categories', 'id':props.categoriesId}}},
          'attributes':values
        }})
      });
      if (response.status === 201) {
        navigate('/'+props.categoriesId);
      }
    };
    requestTasks();
  };

// Validation for tasks have been declared in task model
  return (
    <div>
      <h2>Add a task to {category}</h2>
      <li>Task and due date cannot be empty</li>
      <Formik
        initialValues={{
            task: "",
            due: ""
        }}
        onSubmit={handleSubmit}>
        {() => (
          <Form>
          <h3>Task</h3>
            <Field type="text" name="task" /><br/>
            <h3>Due</h3>
            <Field type='date' name='due'/><br/><br/>
            <button type="submit">Create</button>
          </Form>
        )}
      </Formik>
      <br/>
      <Link to={'/'+props.categoriesId}>Back</Link>
    </div>
  );
}

export default AddTask;
